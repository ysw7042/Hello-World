● 배열(Array) - Heap 메모리에 만든다.

  - 배열 : 같은 자료형의 값을 여러 개 저장할 수 메모리 영역
 
  - 배열은 1차원 배열과 다차원배열(2차원배열, 3차원배열,..)로 구분
  
  - 배열을 사용하는 이유
  
    => 다수의 상수를 저장할 수 있는 저장공간을 쉽게 선언하기 위해 사용
     
    => 일괄처리 : 반복문(for) 
  
 1. 1차원 배열
 
   - 상수를 저장하는 요소(Element)들의 모임
  
   - 1차원 배열 선언
   
     형식) 자료형[] 참조변수=new 자료형[갯수];  
  
      자료형[] - 배열정보를 표현하기 위한 배열 자료형(참조형 - Reference Type)
      
      참조변수(Reference Variable) - 배열정보(메모리 위치)(HashCode)를 저장하기 위한 변수

      new : 상수들를 저장할 수 있는 heap 메모리를 프로그램에 제공(할당)해 주는 연산자
      
   - 배열을 선언한 경우 배열 요소에는 자동적으로 초기값 부여

     >> 기본값 - 정수형 : 0, 실수형 : 0.0, 논리형 : false, 참조형 : null 
  
   - 참조변수와 첨자(Index)를 이용하여 배열 요소(값) 참조

     >> [](배열연산자)에 첨자를 이용하여 배열의 요소 표현
   
     >> 첨자(Index) : 요소를 구분하기 위한 고유값으로 0부터 1씩 증가되는 정수상수
   
   - 반복문(for)을 이용하여 입력, 연산, 출력에 대한 일괄처리 권장
  
   - {} 기호에 초기값들을 나열하여 1차원 배열 선언 가능
   
     형식) 자료형[] 참조변수=new 자료형[]{값,값,....};

	=> "new 자료형[]" 생략 가능
  
     >> 나열된 초기값의 갯수만큼 요소를 가지고 있는 배열 생성
  
  ※ 배열(콜렉션)에 대한 일괄처리를 목적으로 하는 for 명령 - JDK1.5 이상
  
     >> for 명령 내부의 반복지시자(Iterator)를 이용하여 반복 처리

     >> 반복지시자(Iterator 객체) : 배열정보를 활용하여 요소값에 대한 일괄처리를 목적으로 사용하는 객체 - 커서와 비슷

    형식) for(자료형 변수명:배열정보) {
               //배열의 요소값을 차례대로 읽어와 변수에 전달하여 저장
               //배열 요소값을 모두 읽어 사용하면 반복문 종료 
          }
  
 2. 다차원 배열 - 2차원 배열
 
   - 2차원 배열 : 1차원 배열의 모임  
   
   - 2차원 배열의 선언
   
     형식) 자료형[][] 참조변수=new 자료형[행갯수][열갯수];  
     
       => 행갯수 : 2차원 배열에 포함된 1차원 배열의 갯수
       
       => 열갯수 : 1차원 배열의 요소의 갯수
       
     ex) new int[3][4];  
     
   - 행과 열에 대한 첨자로 요소를 표현 - 다중 for 명령을 이용한 일괄처리
     
   - {} 기호를 이용하여 2차원 배열 선언 가능
   
     형식) 자료형[][] 참조변수={{값,값,...},{값,값,...},...};  
